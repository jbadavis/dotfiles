snippet im "import ..." 
import ${1} from '${2}'
endsnippet

snippet af "const func = a => ..." b
const ${1} = (${2}) => ${3}
endsnippet

snippet nf "function func(a) { ... " b
function ${1}(${2}) {
  ${3}

  return ${4};
};
endsnippet

snippet be "beforeEach('..." b
beforeEach(() => {
  ${1} 
});
endsnippet

snippet de "describe('..." b
describe('${1}', () => {
  ${2} 
});
endsnippet

snippet test "test('..." b
test('${1}', () => {
  ${2}
});
endsnippet

snippet it "it('..." b
it('${1}', () => {
  ${2}
});
endsnippet

snippet ex "expect(..." b
expect(${1}).${2}
endsnippet

snippet je "jest.fn()" 
jest.fn(${1})
endsnippet

snippet ed "export default" b
export default 
endsnippet

snippet co "import ..." b
console.log(${1});
endsnippet

snippet con "const ... = " b
const ${1} = ${2};
endsnippet

snippet Sy "Symbol(..." 
Symbol('${1}')${2}
endsnippet

snippet try "try ..." 
try {
  ${1}
} catch (err) { 
  ${2}
}
endsnippet

snippet if "if ..." 
if (${1}) {
  ${2}
}
endsnippet

snippet cd "const ... export ..." 
const ${1} = ${2};

export default ${1}
endsnippet

snippet in "interface" 
interface ${1} {
  ${2}
}
endsnippet

snippet mocked "const mocked..." 
const mocked${1} = mocked(${2});
endsnippet

snippet cam "clearAllMocks" 
afterEach(() => {
  jest.clearAllMocks();
});
endsnippet


snippet as "as unknown" 
as unknown as ${1}
endsnippet

